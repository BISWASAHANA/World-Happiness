<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='WorldHappy_17246956354220' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Togo&quot;'>
        <calculation class='tableau' formula='&quot;Togo&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Congo&quot;' />
          <member value='&quot;Congo (Brazzaville)&quot;' />
          <member value='&quot;Congo (Kinshasa)&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czech Republic&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hong Kong S.A.R. of China&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Ivory Coast&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Cyprus&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palestinian Territories&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;Somaliland region&quot;' />
          <member value='&quot;Somaliland Region&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;State of Palestine&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Swaziland&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan Province of China&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turkiye&quot;' />
          <member value='&quot;Turkmenistan&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United States&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
      <column caption='Select Year' datatype='integer' default-format='n0;-0' name='[Year Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2022'>
        <calculation class='tableau' formula='2022' />
        <range max='2023' min='2015' />
      </column>
    </datasource>
    <datasource caption='World Happiness Dataset 2015-2023' inline='true' name='federated.19sagpt1v4qh7k19rqoiy017lxy7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World Happiness Dataset 2015-2023' name='textscan.0yi4qrd0pct2d61djtsne064aj3d'>
            <connection class='textscan' directory='C:/Users/Ahana Biswas/Downloads/archive (2)' filename='World Happiness Dataset 2015-2023.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0yi4qrd0pct2d61djtsne064aj3d' name='World Happiness Dataset 2015-2023.csv' table='[World Happiness Dataset 2015-2023#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='region' ordinal='1' />
            <column datatype='real' name='happiness_score' ordinal='2' />
            <column datatype='real' name='gdp_per_capita' ordinal='3' />
            <column datatype='real' name='social_support' ordinal='4' />
            <column datatype='real' name='healthy_life_expectancy' ordinal='5' />
            <column datatype='real' name='freedom_to_make_life_choices' ordinal='6' />
            <column datatype='real' name='generosity' ordinal='7' />
            <column datatype='real' name='perceptions_of_corruption' ordinal='8' />
            <column datatype='integer' name='year' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0yi4qrd0pct2d61djtsne064aj3d' name='World Happiness Dataset 2015-2023.csv' table='[World Happiness Dataset 2015-2023#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='region' ordinal='1' />
            <column datatype='real' name='happiness_score' ordinal='2' />
            <column datatype='real' name='gdp_per_capita' ordinal='3' />
            <column datatype='real' name='social_support' ordinal='4' />
            <column datatype='real' name='healthy_life_expectancy' ordinal='5' />
            <column datatype='real' name='freedom_to_make_life_choices' ordinal='6' />
            <column datatype='real' name='generosity' ordinal='7' />
            <column datatype='real' name='perceptions_of_corruption' ordinal='8' />
            <column datatype='integer' name='year' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>happiness_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[happiness_score]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>happiness_score</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>social_support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[social_support]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>social_support</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>healthy_life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[healthy_life_expectancy]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>healthy_life_expectancy</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freedom_to_make_life_choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[freedom_to_make_life_choices]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>freedom_to_make_life_choices</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generosity]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>generosity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perceptions_of_corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[perceptions_of_corruption]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>perceptions_of_corruption</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[World Happiness Dataset 2015-2023.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Happiness Index' datatype='real' name='[Calculation_1540512586121732096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [year]=[Parameters].[Year Parameter]&#13;&#10;THEN&#13;&#10;[happiness_score]&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Freedom wrt country' datatype='real' name='[Calculation_1540512586123939841]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[freedom_to_make_life_choices]&#13;&#10;END' />
      </column>
      <column caption='GDP wrt year and region' datatype='real' name='[Calculation_1540512586139766789]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;[region]=[region]&#13;&#10;AND &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;THEN&#13;&#10;[gdp_per_capita]&#13;&#10;END' />
      </column>
      <column caption='GDP cw yw' datatype='real' name='[Calculation_666251309959094273]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[gdp_per_capita]&#13;&#10;END' />
      </column>
      <column caption='Life Expectancy cw yw' datatype='real' name='[Calculation_666251309959630850]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[GDP wrt year (copy)_1540512586142081031]&#13;&#10;END' />
      </column>
      <column caption='Corruption cw yw' datatype='real' name='[Calculation_666251309959847939]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[perceptions_of_corruption]&#13;&#10;END' />
      </column>
      <column caption='Happiness cw yw' datatype='real' name='[Calculation_666251309962272772]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[happiness_score]&#13;&#10;END' />
      </column>
      <column caption='Generosity cw yw' datatype='real' name='[Calculation_666251309962506245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[generosity]&#13;&#10;END' />
      </column>
      <column caption='Corr between Freedom and GDP' datatype='real' name='[Calculation_926334187244503041]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='WINDOW_CORR(SUM([Calculation_1540512586123939841]),SUM([Freedom wrt country (copy)_1540512586124750850]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Sum' caption='GDP wrt year' datatype='real' name='[Freedom wrt country (copy)_1540512586124750850]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[gdp_per_capita]&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Life Expectancy' datatype='real' name='[GDP wrt year (copy)_1540512586142081031]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[healthy_life_expectancy]&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Happiness' datatype='real' name='[GDP wrt year (copy)_1540512586148335625]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[happiness_score]/10&#13;&#10;END' />
      </column>
      <column caption='Social Support- cw yw' datatype='real' name='[GDP wrt year (copy)_666251309956726784]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;and&#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;THEN&#13;&#10;[social_support]&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='World Happiness Dataset 2015-2023.csv' datatype='table' name='[__tableau_internal_object_id__].[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Hong Kong S.A.R. of China&quot;' value='&quot;Hong Kong&quot;' />
          <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
          <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
          <semantic-value key='&quot;Somaliland Region&quot;' value='&quot;Somalia&quot;' />
          <semantic-value key='&quot;Taiwan Province of China&quot;' value='&quot;Taiwan&quot;' />
        </semantic-values>
      </column>
      <column aggregation='Sum' caption='Freedom To Make Life Choices' datatype='real' name='[freedom_to_make_life_choices]' role='dimension' type='ordinal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Generosity' datatype='real' name='[generosity]' role='measure' type='quantitative' />
      <column caption='Happiness Score' datatype='real' name='[happiness_score]' role='measure' type='quantitative' />
      <column caption='Healthy Life Expectancy' datatype='real' name='[healthy_life_expectancy]' role='measure' type='quantitative' />
      <column caption='Perceptions Of Corruption' datatype='real' name='[perceptions_of_corruption]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Social Support' datatype='real' name='[social_support]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1540512586123939841]' derivation='Attribute' name='[attr:Calculation_1540512586123939841:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom wrt country (copy)_1540512586124750850]' derivation='Attribute' name='[attr:Freedom wrt country (copy)_1540512586124750850:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP wrt year (copy)_1540512586142081031]' derivation='Attribute' name='[attr:GDP wrt year (copy)_1540512586142081031:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP wrt year (copy)_1540512586148335625]' derivation='Attribute' name='[attr:GDP wrt year (copy)_1540512586148335625:qk]' pivot='key' type='quantitative' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Ahana Biswas/Documents/My Tableau Repository/Datasources/World Happiness Dataset 2015-2023.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/17/2024 08:28:43 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='World Happiness Dataset 2015-2023' increment-value='%null%' refresh-type='create' rows-inserted='1367' timestamp-start='2024-08-17 08:28:42.105' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>172</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region</remote-alias>
              <ordinal>1</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>happiness_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[happiness_score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>happiness_score</remote-alias>
              <ordinal>2</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1061</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gdp_per_capita</remote-alias>
              <ordinal>3</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1097</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>social_support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[social_support]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>social_support</remote-alias>
              <ordinal>4</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1043</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>healthy_life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[healthy_life_expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>healthy_life_expectancy</remote-alias>
              <ordinal>5</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>961</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freedom_to_make_life_choices</remote-name>
              <remote-type>5</remote-type>
              <local-name>[freedom_to_make_life_choices]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freedom_to_make_life_choices</remote-alias>
              <ordinal>6</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>923</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>generosity</remote-alias>
              <ordinal>7</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>820</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>perceptions_of_corruption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[perceptions_of_corruption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>perceptions_of_corruption</remote-alias>
              <ordinal>8</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>803</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>9</ordinal>
              <family>World Happiness Dataset 2015-2023.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.89528' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.10472' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]&quot;</bucket>
            </map>
            <map to='#e1ce41'>
              <bucket>&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586148335625:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latin America and Caribbean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middle East and North Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central and Eastern Europe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America and ANZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Commonwealth of Independent States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Togo&quot;'>
          <calculation class='tableau' formula='&quot;Togo&quot;' />
        </column>
        <column caption='Select Year' datatype='integer' default-format='n0;-0' name='[Year Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2022'>
          <calculation class='tableau' formula='2022' />
          <range max='2023' min='2015' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='World Happiness Dataset 2015-2023.csv' id='World Happiness Dataset 2015-2023.csv_C93B3F007F5C4DF29BD916B249D2E530'>
            <properties context=''>
              <relation connection='textscan.0yi4qrd0pct2d61djtsne064aj3d' name='World Happiness Dataset 2015-2023.csv' table='[World Happiness Dataset 2015-2023#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='region' ordinal='1' />
                  <column datatype='real' name='happiness_score' ordinal='2' />
                  <column datatype='real' name='gdp_per_capita' ordinal='3' />
                  <column datatype='real' name='social_support' ordinal='4' />
                  <column datatype='real' name='healthy_life_expectancy' ordinal='5' />
                  <column datatype='real' name='freedom_to_make_life_choices' ordinal='6' />
                  <column datatype='real' name='generosity' ordinal='7' />
                  <column datatype='real' name='perceptions_of_corruption' ordinal='8' />
                  <column datatype='integer' name='year' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Freedom vs GDP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Dataset 2015-2023' name='federated.19sagpt1v4qh7k19rqoiy017lxy7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Togo&quot;'>
              <calculation class='tableau' formula='&quot;Togo&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19sagpt1v4qh7k19rqoiy017lxy7'>
            <column aggregation='Sum' caption='Freedom wrt country' datatype='real' name='[Calculation_1540512586123939841]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[freedom_to_make_life_choices]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='GDP wrt year' datatype='real' name='[Freedom wrt country (copy)_1540512586124750850]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[gdp_per_capita]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1540512586123939841]' derivation='Attribute' name='[attr:Calculation_1540512586123939841:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom wrt country (copy)_1540512586124750850]' derivation='Attribute' name='[attr:Freedom wrt country (copy)_1540512586124750850:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Hong Kong S.A.R. of China&quot;' value='&quot;Hong Kong&quot;' />
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
                <semantic-value key='&quot;Somaliland Region&quot;' value='&quot;Somalia&quot;' />
                <semantic-value key='&quot;Taiwan Province of China&quot;' value='&quot;Taiwan&quot;' />
              </semantic-values>
            </column>
            <column aggregation='Sum' caption='Freedom To Make Life Choices' datatype='real' name='[freedom_to_make_life_choices]' role='dimension' type='ordinal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]&quot;</bucket>
              <bucket>&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]' scope='rows' value='Freedom vs GDP' />
            <format attr='width' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]' value='68' />
            <format attr='width' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk]' value='68' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]' value='7' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk]' />
              <color column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk]' />
              <color column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>GDP</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk]' />
              <color column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Freedom</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk] + [federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586123939841:qk])</rows>
        <cols>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{BCE90790-7322-483F-8A01-5BC1DE49F24E}' />
    </worksheet>
    <worksheet name='GDP wrt Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Dataset 2015-2023' name='federated.19sagpt1v4qh7k19rqoiy017lxy7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Year' datatype='integer' default-format='n0;-0' name='[Year Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <range max='2023' min='2015' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19sagpt1v4qh7k19rqoiy017lxy7'>
            <column caption='AVG(0)' datatype='real' name='[Calculation_1261007950217052178]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column caption='AVG(1)' datatype='real' name='[Calculation_1261007950217089044]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='AVG(1)' />
            </column>
            <column caption='GDP wrt year and region' datatype='real' name='[Calculation_1540512586139766789]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;[region]=[region]&#13;&#10;AND &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;THEN&#13;&#10;[gdp_per_capita]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1540512586139766789]' derivation='Avg' name='[avg:Calculation_1540512586139766789:qk]' pivot='key' type='quantitative' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1261007950217052178]' derivation='User' name='[usr:Calculation_1261007950217052178:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1261007950217089044]' derivation='User' name='[usr:Calculation_1261007950217089044:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217089044:qk]' field-type='quantitative' fold='true' max='1537584356405.8887' min='-1492767813229.4258' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217052178:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217089044:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217052178:qk]' field-type='quantitative' max='0.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' value='5' />
            <format attr='font-family' value='Tableau Light' />
            <format attr='text-orientation' value='0' />
            <format attr='text-align' value='right' />
            <format attr='wrap' value='off' />
            <format attr='vertical-align' value='top' />
            <format attr='text-align' data-class='subtotal' value='center' />
            <format attr='text-orientation' data-class='subtotal' value='0' />
            <format attr='vertical-align' data-class='subtotal' value='bottom' />
            <format attr='color' value='#555555' />
            <format attr='font-size' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' value='center' />
            <format attr='vertical-align' data-class='total' value='bottom' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' value='left' />
            <format attr='vertical-align' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' value='center' />
            <format attr='font-size' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' value='5' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217089044:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217052178:qk]' value='false' />
            <format attr='font-size' value='8' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#ffffff4b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='stroke-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Tableau Semibold' />
            <format attr='font-size' value='1' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
            <format attr='font-family' value='Tableau Semibold' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' value='Region' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#00000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' value='Region' />
            <format attr='font-size' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='10' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[avg:Calculation_1540512586139766789:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217052178:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' />
              <text column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[avg:Calculation_1540512586139766789:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[avg:Calculation_1540512586139766789:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='4.284820556640625' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217089044:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[avg:Calculation_1540512586139766789:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.1988949775695801' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217052178:qk] + [federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217089044:qk])</rows>
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='141'>
            <formatted-text>
              <run fontcolor='#787878'>Avg. GDP of  regions </run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields>
                        <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217089044:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[avg:Calculation_1540512586139766789:qk]</field>
                      <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[usr:Calculation_1261007950217089044:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.90514743589743629</value>
                    <value>1.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-2' y='27' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{41438A5D-41F8-44D2-96AA-BBACEC327BB3}' />
    </worksheet>
    <worksheet name='Happiness vs Life Expectancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Dataset 2015-2023' name='federated.19sagpt1v4qh7k19rqoiy017lxy7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Togo&quot;'>
              <calculation class='tableau' formula='&quot;Togo&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19sagpt1v4qh7k19rqoiy017lxy7'>
            <column aggregation='Sum' caption='GDP wrt year' datatype='real' name='[Freedom wrt country (copy)_1540512586124750850]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[gdp_per_capita]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Life Expectancy' datatype='real' name='[GDP wrt year (copy)_1540512586142081031]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[healthy_life_expectancy]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Happiness' datatype='real' name='[GDP wrt year (copy)_1540512586148335625]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[happiness_score]/10&#13;&#10;END' />
            </column>
            <column-instance column='[Freedom wrt country (copy)_1540512586124750850]' derivation='Attribute' name='[attr:Freedom wrt country (copy)_1540512586124750850:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP wrt year (copy)_1540512586142081031]' derivation='Attribute' name='[attr:GDP wrt year (copy)_1540512586142081031:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP wrt year (copy)_1540512586148335625]' derivation='Attribute' name='[attr:GDP wrt year (copy)_1540512586148335625:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Hong Kong S.A.R. of China&quot;' value='&quot;Hong Kong&quot;' />
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
                <semantic-value key='&quot;Somaliland Region&quot;' value='&quot;Somalia&quot;' />
                <semantic-value key='&quot;Taiwan Province of China&quot;' value='&quot;Taiwan&quot;' />
              </semantic-values>
            </column>
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Happiness Score' datatype='real' name='[happiness_score]' role='measure' type='quantitative' />
            <column caption='Healthy Life Expectancy' datatype='real' name='[healthy_life_expectancy]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586148335625:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586148335625:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]' scope='rows' value='Happiness vs Life Expectancy' />
            <format attr='width' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]' value='68' />
            <format attr='width' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586148335625:qk]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' value='Tableau Light' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' value='Tableau Regular' />
            <format attr='font-size' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]' value='7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]' value='false' />
            <format attr='break-on-special' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]' value='false' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='font-family' value='Tableau Regular' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Tableau Book' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586148335625:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]' />
              <color column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dashed' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586148335625:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]' />
              <color column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dashed' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586148335625:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Freedom wrt country (copy)_1540512586124750850:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586148335625:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk]' />
              <color column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dashed' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586142081031:qk] + [federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_1540512586148335625:qk])</rows>
        <cols>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{EDF97860-9CDB-4900-88E7-0AB922767720}' />
    </worksheet>
    <worksheet name='Overall comparison year-wise and country-wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Dataset 2015-2023' name='federated.19sagpt1v4qh7k19rqoiy017lxy7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Togo&quot;'>
              <calculation class='tableau' formula='&quot;Togo&quot;' />
            </column>
            <column caption='Select Year' datatype='integer' default-format='n0;-0' name='[Year Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <range max='2023' min='2015' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19sagpt1v4qh7k19rqoiy017lxy7'>
            <column caption='GDP cw yw' datatype='real' name='[Calculation_666251309959094273]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[gdp_per_capita]&#13;&#10;END' />
            </column>
            <column caption='Life Expectancy cw yw' datatype='real' name='[Calculation_666251309959630850]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[GDP wrt year (copy)_1540512586142081031]&#13;&#10;END' />
            </column>
            <column caption='Corruption cw yw' datatype='real' name='[Calculation_666251309959847939]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[perceptions_of_corruption]&#13;&#10;END' />
            </column>
            <column caption='Happiness cw yw' datatype='real' name='[Calculation_666251309962272772]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[happiness_score]&#13;&#10;END' />
            </column>
            <column caption='Generosity cw yw' datatype='real' name='[Calculation_666251309962506245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;AND &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[generosity]&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Life Expectancy' datatype='real' name='[GDP wrt year (copy)_1540512586142081031]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;THEN&#13;&#10;[healthy_life_expectancy]&#13;&#10;END' />
            </column>
            <column caption='Social Support- cw yw' datatype='real' name='[GDP wrt year (copy)_666251309956726784]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;[country]=[Parameters].[Country Parameter]&#13;&#10;and&#13;&#10;[year]=[Parameters].[Year Parameter]&#13;&#10;THEN&#13;&#10;[social_support]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_666251309959094273]' derivation='Attribute' name='[attr:Calculation_666251309959094273:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_666251309959630850]' derivation='Attribute' name='[attr:Calculation_666251309959630850:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_666251309959847939]' derivation='Attribute' name='[attr:Calculation_666251309959847939:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_666251309962272772]' derivation='Attribute' name='[attr:Calculation_666251309962272772:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_666251309962506245]' derivation='Attribute' name='[attr:Calculation_666251309962506245:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP wrt year (copy)_666251309956726784]' derivation='Attribute' name='[attr:GDP wrt year (copy)_666251309956726784:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Hong Kong S.A.R. of China&quot;' value='&quot;Hong Kong&quot;' />
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
                <semantic-value key='&quot;Somaliland Region&quot;' value='&quot;Somalia&quot;' />
                <semantic-value key='&quot;Taiwan Province of China&quot;' value='&quot;Taiwan&quot;' />
              </semantic-values>
            </column>
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Generosity' datatype='real' name='[generosity]' role='measure' type='quantitative' />
            <column caption='Happiness Score' datatype='real' name='[happiness_score]' role='measure' type='quantitative' />
            <column caption='Healthy Life Expectancy' datatype='real' name='[healthy_life_expectancy]' role='measure' type='quantitative' />
            <column caption='Perceptions Of Corruption' datatype='real' name='[perceptions_of_corruption]' role='measure' type='quantitative' />
            <column caption='Social Support' datatype='real' name='[social_support]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_666251309959847939:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_666251309959094273:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_666251309962506245:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_666251309962272772:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_666251309959630850:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:GDP wrt year (copy)_666251309956726784:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]</rows>
        <cols>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{6A7319B3-AC11-4195-BCEB-E42ABCEA7C5C}' />
    </worksheet>
    <worksheet name='Yearwise happiness score'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Happiness Dataset 2015-2023' name='federated.19sagpt1v4qh7k19rqoiy017lxy7' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Year' datatype='integer' default-format='n0;-0' name='[Year Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <range max='2023' min='2015' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19sagpt1v4qh7k19rqoiy017lxy7'>
            <column caption='Happiness Index' datatype='real' name='[Calculation_1540512586121732096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [year]=[Parameters].[Year Parameter]&#13;&#10;THEN&#13;&#10;[happiness_score]&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1540512586121732096]' derivation='Attribute' name='[attr:Calculation_1540512586121732096:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Hong Kong S.A.R. of China&quot;' value='&quot;Hong Kong&quot;' />
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
                <semantic-value key='&quot;Somaliland Region&quot;' value='&quot;Somalia&quot;' />
                <semantic-value key='&quot;Taiwan Province of China&quot;' value='&quot;Taiwan&quot;' />
              </semantic-values>
            </column>
            <column caption='Happiness Score' datatype='real' name='[happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:region:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[Longitude (generated)]' field-type='quantitative' max='53132288.444214404' min='14281151.500353983' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[Latitude (generated)]' field-type='quantitative' max='12288376.101665167' min='-8489156.0884394664' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Tableau Bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586121732096:qk]' num-steps='5' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d7e6ea</color>
                <color>#bfdce3</color>
                <color>#a8d2dc</color>
                <color>#92c8d5</color>
                <color>#7dbfce</color>
                <color>#69b6c7</color>
                <color>#56adc0</color>
                <color>#45a4b9</color>
                <color>#349bb2</color>
                <color>#2593ac</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='7' />
            <format attr='font-family' value='Tableau Bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='7' />
            <format attr='font-family' value='Tableau Bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute' value='true' />
            <format attr='enabled' id='light-admin-0-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-1st-tier' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute-sub' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents' value='true' />
            <format attr='enabled' id='light-admin1-water-lines-usa-tableau' value='true' />
            <format attr='enabled' id='light-9-dash-line-casing' value='true' />
            <format attr='enabled' id='light-9-dash-line' value='true' />
            <format attr='enabled' id='light-admin-1-label-9th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-8th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-7th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-6th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-1st-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-3rd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-2nd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-1st-tier' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='place-suburb' value='true' />
            <format attr='enabled' id='place-neighborhood' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586121732096:qk]' />
              <lod column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:country:nk]' />
              <geometry column='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[Latitude (generated)]</rows>
        <cols>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2DE8A1AB-4FA8-43C4-8ABE-51D9A87E2430}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#000000' />
          <format attr='font-weight' value='normal' />
          <format attr='font-family' value='Tableau Semibold' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-family' value='Tableau Bold' />
          <format attr='color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='World Happiness Dataset 2015-2023' name='federated.19sagpt1v4qh7k19rqoiy017lxy7' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Togo&quot;'>
          <calculation class='tableau' formula='&quot;Togo&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Australia&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahrain&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Belize&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bhutan&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Botswana&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Burundi&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Comoros&quot;' />
            <member value='&quot;Congo&quot;' />
            <member value='&quot;Congo (Brazzaville)&quot;' />
            <member value='&quot;Congo (Kinshasa)&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czech Republic&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hong Kong S.A.R. of China&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;India&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;Iran&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Ivory Coast&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kosovo&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Laos&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Lesotho&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Libya&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malawi&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Mali&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Moldova&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Myanmar&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;North Cyprus&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Palestinian Territories&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Puerto Rico&quot;' />
            <member value='&quot;Qatar&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russia&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Sierra Leone&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Somalia&quot;' />
            <member value='&quot;Somaliland region&quot;' />
            <member value='&quot;Somaliland Region&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;South Korea&quot;' />
            <member value='&quot;South Sudan&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;State of Palestine&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Swaziland&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Syria&quot;' />
            <member value='&quot;Taiwan Province of China&quot;' />
            <member value='&quot;Tajikistan&quot;' />
            <member value='&quot;Tanzania&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Turkiye&quot;' />
            <member value='&quot;Turkmenistan&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;United States&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Venezuela&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Yemen&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
        <column caption='Select Year' datatype='integer' default-format='n0;-0' name='[Year Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2022'>
          <calculation class='tableau' formula='2022' />
          <range max='2023' min='2015' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.19sagpt1v4qh7k19rqoiy017lxy7'>
        <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
        <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100167' id='15' is-centered='0' param='C:/Users/Ahana Biswas/Pictures/freepik-export-20240826172537ExOD.png' type-v2='bitmap' w='100063' x='0' y='-167' />
        <zone h='51875' id='3' name='GDP wrt Region' w='54700' x='900' y='47125' />
        <zone h='4125' id='4' mode='checkdropdown' name='GDP wrt Region' param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' type-v2='filter' w='21700' x='26700' y='47375' />
        <zone h='5750' id='6' mode='slider' param='[Parameters].[Year Parameter]' type-v2='paramctrl' w='20800' x='78300' y='3250' />
        <zone h='42750' id='7' name='Yearwise happiness score' w='54700' x='900' y='4375' />
        <zone h='5875' id='9' name='Yearwise happiness score' pane-specification-id='0' param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586121732096:qk]' type-v2='color' w='23100' x='31100' y='41125' />
        <zone h='6375' id='10' mode='compact' param='[Parameters].[Country Parameter]' type-v2='paramctrl' w='14400' x='63400' y='3250' />
        <zone h='32000' id='11' name='Happiness vs Life Expectancy' w='43200' x='56200' y='8625' />
        <zone h='30875' id='13' name='Freedom vs GDP' w='43400' x='56000' y='40875' />
        <zone h='27125' id='14' name='Overall comparison year-wise and country-wise' w='43300' x='56000' y='71875' />
        <zone forceUpdate='true' h='2750' id='16' type-v2='text' w='45800' x='25900' y='750'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Perpetua' fontsize='20'>Happiness around the world</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='21' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='100167' id='15' is-centered='0' is-fixed='true' param='C:/Users/Ahana Biswas/Pictures/freepik-export-20240826172537ExOD.png' type-v2='bitmap' w='100063' x='0' y='-167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2750' id='16' type-v2='text' w='45800' x='25900' y='750'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Perpetua' fontsize='20'>Happiness around the world</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6375' id='10' mode='compact' param='[Parameters].[Country Parameter]' type-v2='paramctrl' w='14400' x='63400' y='3250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='6' mode='slider' param='[Parameters].[Year Parameter]' type-v2='paramctrl' w='20800' x='78300' y='3250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42750' id='7' is-fixed='true' name='Yearwise happiness score' w='54700' x='900' y='4375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5875' id='9' name='Yearwise happiness score' pane-specification-id='0' param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586121732096:qk]' type-v2='color' w='23100' x='31100' y='41125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='32000' id='11' is-fixed='true' name='Happiness vs Life Expectancy' w='43200' x='56200' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='30875' id='13' is-fixed='true' name='Freedom vs GDP' w='43400' x='56000' y='40875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4125' id='4' mode='checkdropdown' name='GDP wrt Region' param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' type-v2='filter' w='21700' x='26700' y='47375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51875' id='3' is-fixed='true' name='GDP wrt Region' w='54700' x='900' y='47125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='27125' id='14' is-fixed='true' name='Overall comparison year-wise and country-wise' w='43300' x='56000' y='71875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0C865FC9-965A-4B61-8930-032A0D1D3737}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Yearwise happiness score'>
      <cards>
        <edge name='left'>
          <strip size='252'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Year Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586121732096:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[attr:Calculation_1540512586121732096:qk]</field>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:country:nk]</field>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B73C7B1C-B923-49AE-9F1E-2E2EEA720AAA}' />
    </window>
    <window class='worksheet' name='Overall comparison year-wise and country-wise'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Country Parameter]' type='parameter' />
            <card mode='slider' param='[Parameters].[Year Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AC965F1-6546-45B0-8284-086AA83341BA}' />
    </window>
    <window class='worksheet' name='Happiness vs Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Country Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]</field>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:Freedom wrt country (copy)_1540512586124750850:ok]</field>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:GDP wrt year (copy)_1540512586142081031:ok]</field>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:GDP wrt year (copy)_1540512586148335625:ok]</field>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{3E3F29E5-CEB2-4332-97C1-03AE99DFA765}' />
    </window>
    <window class='worksheet' name='Freedom vs GDP'>
      <cards>
        <edge name='left'>
          <strip size='192'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Country Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]</field>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:Calculation_1540512586123939841:ok]</field>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:Freedom wrt country (copy)_1540512586124750850:ok]</field>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1BA9BC4-97C1-4697-B4EC-D64AA88A00CC}' />
    </window>
    <window class='worksheet' name='GDP wrt Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Year Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{6865EC6A-6BDD-4AF3-ABF3-F92A8D9EAAA6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Freedom vs GDP'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:year:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='GDP wrt Region'>
          <zoom type='entire-view' />
          <highlight field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[none:region:nk]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Happiness vs Life Expectancy'>
          <zoom type='entire-view' />
          <highlight field='[federated.19sagpt1v4qh7k19rqoiy017lxy7].[:Measure Names]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Overall comparison year-wise and country-wise'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Yearwise happiness score'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A8DE9F9B-9E17-4364-ADC2-DEEDDB730957}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      wBL5/wFVqTExJEm0OQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Freedom vs GDP' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAWv0lEQVR4nO3dWYwc133v8W9V9b7O9OwLZ+VwSJrWaknUakt0YjhBEsAw7MiO85Ig17i4
      uQiS6wQO/OCXrIqBIAmQB8dJ7HvjKAgSIMhiJ45kSZEoSrJsWeY2G2d6OPs+vXfXcu5DU4xs
      Dc2Znl6GXf8PQHC4TP1P9dSvus6pOqc1pZRCCJfSG90AIRrJ884XmUwGx3EOvcF8Pk8wGDz0
      dg7KcRx0vf55dlPdZtzXmwGIRCL7/iZlW0xOXqF7YJyQx2R6Jknf0HFiIR8AsVis+i29Dcuy
      8Hg8t/+PUveOqlnruhVttZDborVrlO3NFTzxIPl8kXyhQNhvYNs2lmVVu523Zdt23Wu6rW4z
      7mtFAfD4QixNXaW9u5dsvoima1iWjWEYGIbRkLMEIHWbtGYt62rVHgVKpVJyCdSkdZtxX2UU
      SLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4
      mgRAuJoEQLiaBEC4WmUBUIpcNoOjFLZVYnd3l5LZmPmiQhxGRfPMSvld5pLLhOMJetujrC8m
      CXWP0NMaRilFo9bakrrNWbOWdSsKgONYxFs7KBbzeP1BPOE4vYkItm2jlGrI6gHVWNNI6h69
      mrWuW1EA/OEE9kaS3p5ucoUSHR1dABiGga7rTTdxWuo2rmat61a0VU3TGRgarnZbhKg7GQUS
      riYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4m
      ARCuJgEQriYBEK5WUQBss8ClH7zFxk4Wq5jj8qXL5Ir1/3R4IQ6r4lUhOvrHyabWMYoOOdMh
      Xyjg9wSxbRvLqn8YGjER3211m3FfKwqALxhj7fIEHb396D4PIU8G23YwDAPDMBoycRqQuk1a
      s5Z1K9qq4Q1y5u57bv45Hm+pWoOEqCfpBAtXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAI
      V5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV6ssAEqxtHAd01Eo22Rmeops
      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
      pifbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GDP wrt Region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVnElEQVR4nO3daZAc533f8W8f03PuzM6xB/YEsAAk8AAJgARFUhGplEsVS6mKy7kc512s
      clIpOy+SVFyVV86LxJFcSZwqlyqxKi9cvkLJThQpoizJsUzJpMQTJwECWO59HzM7s3P09Ez3
      kxdLLDHE3juzC2z/P2/Ine5++iGrf30+h6aUUgjhU/phV0CIw2Te+5fFxUWCweBh1kWIA7ce
      gGAwSDweP8y6CHHg5BZI+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoE
      QPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4
      mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoE
      QPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+Jp52BUQjybXdXFdl0AgQKFQIBKJ
      4DgOrusSCoUol8skEgk0TTvQetm2TSgUolqt4rou9XodwzBwHAdd14lEIgQCgfX1JQBiT0ql
      EsVikVQqxeuvv05vby/BYJDFxUW6u7upVqtEo9GGg+2TlOehajWUbeNV7LV/2jZ2MIyd6SZg
      aFi6RsDQMQ0NQ2PLQHmex8TEBGfOnOHKlSvEYjGUUrS3t1MoFKhWq3R0dNDX17e+jQRA7Inj
      OMzPz9Pe3k5/fz9tbW2Uy2Xa2tqo1WrrZ9x7lFK4S0vYN29Rm56mPj9PfWaG+tIyqlJpKHvm
      3Ge4/YV/2PCbZWjEggYxyyARMmgPm3S1WUQto2Ef2WyW5eVluru7sW2bUqlEJBIhkUgwPT39
      QIA0pZQCKBQKxOPxpv+PEv7lrq5iX7uOff061Vu3qC8swtrhtqWNArARDWgLGhyLW3S3WRyL
      WwTN3T3WyhVANJVXqWDfuEHp9Tewr11Hlcst25cCClWXwmKF24sVLEOjN2FxMh2mu83C1Ld/
      /pAAiH1TSuGtrFD43p9T/slPcHMrh1IPx1WMZquMZqtELZ3TmTCf7oxgGdqmzw4SALEv9aUl
      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
      Gvh4hhjP8xgbG+P48eOUy2VyuRzLy8vrddN1nWQy2TDDjARA7Ek8HmdpaQmlFMVikXq9TiqV
      Ip/Ps7CwQCqVwnGc9UmvNU0jFOkgdPzzdB1v/Jbg1m3qtRJurUK9VsbRFF44jmWEsHSLgB5o
      eHOzGV3XCYfX2vx/8MEH1Go1PM+js7OTTCaz4STcEgCxJ7lcjmw2SywWI5VK0d3dvT4daiqV
      IpvNEgzu7HbEMEMYZgge7K+yK67rMj8/j2manD9/nkqlwsTEBJ7nkc1mUUqRTqeJRCLr28hD
      sPA1aQohfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIg
      fE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxN
      AiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIg
      fE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfO3/A0aGNuBS8FycAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Happiness vs Life Expectancy' width='192'>
      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
      BL/RSUHSkgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='187' name='Overall comparison year-wise and country-wise' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yearwise happiness score' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9V5CcV3bn+bv3s+mzPKoKVfCeIAGwQdc0zTbTTUmtGY1GK2mkMQrNrJnY
      3XmZjdjYhw3N2z7swz7txuxGaGNlZ0bdGrXas5tsNrtJgiRIkAAI7235Sp+fvXcfsjKRVciq
      yoIhATb+EUBVZX7mfvc799xzz/mfc8W///f/Xp89e5ZH+OxRcjNY1SJh/wjGyEaiq+fJlaY7
      HuuHEdHgKKp/mOSpD6j2jUAyjXPtHI4Utx0fxTECqDopzH1fJLh5GbNvCCORanx/8zJxqYA5
      c5O0KQGI45iJiQmiKLpvz3yvkM1myWQymKa5pvPMs2fPcuTIkfvUrEdYC2qGTVWB89Vd6OtT
      6DdeIy9iAMIoJjAsksQopZjrX497+AMMyyQhBV7wPl66B3oHoVwgV5lDA2iNEIL5rfsQbpL4
      g7eQKol3/iSpfc9gpDIAeKdOkTv1PpZpIsStARQEAeVymcnJSbTW5HI5isXiZ9A7K2NkZIT5
      +XlyuRw9PT0IIRY9x3KQn0LbHmEZaK2J4phSEFF2MyQin3xYI7xyjnh2Csu2WscaUlBO5lBa
      YxgG/XM3yLg2SUMihMC1bQwp0NJALwh9JZGluGFX4/y5Scz1m6gVi9QPv4kztpn66aPElRI6
      jpFSYBrGIqHRWmOaJul0mpGREdavX8+6deu6EqxPG8VikXQ6TTqd7lr4AdY2XzzCPUXZShDt
      f4G4UkLcuEy6XkJrTfbEe0gBhryln4QQODqmqAS9kttesBACuzhLslpsmAFCQGEGw3YB0FfP
      4Q2O0fN7/y1RYQazd5Bo4hrVD9+CWpl+r4S0rEXXVEqhlCIMQwBmZmaYmppCa32fe2btqFar
      eJ6HuTCD2bbd1XmPBsBnhCBWxM+8jNU3gNk/RHzqQ2KlUBoceUuDBUGAbdsIIcjXi8TEdHpt
      hXKZcNcXMMvzuIVpEkKTdR1UYYrS8EaMfV/EtBpCYQ2tByD11Esor05w+SzlEx9gKYVsG3SG
      YRAEAVevXkUpdf875S6Ry+WYm5vDdd2uB8A9MYHK1epD0UEPCqI4pjy2A7N3gPJbPyWulBHJ
      ND6S0E60hD+MIgp9o4v61lcN0ySIIqbrAbPlCpV6HYmAdA7ji1+nuvNJqmFE2bC5GSqqYUxU
      KRFXy+g4Ipybpn7+JN7lswjHxdm6G3HgeeIO7zCRSLB161Z6e3tJJpOfWh+tBY7jMDQ0xNDQ
      EGNjYyQSia7PvSczQDqZfCDtwgcRkVKU+kawnniGqDCLMX2d+BNBsjRHbf1WslfPoI2GXir3
      jWBt3k18eKKlqSr9I4Rzk2hpE2cSsGkHNQSpj3+BceIwcd8gUb1O+JV/gnf1Ahx5C3HpNF5x
      DqTE2rKL8MjbmNk8sl4h9OqQSGK99xpWsrPgmKaJYRjU6/XWe9Zak0wmqdfrn7lJ5Ps+tm0T
      x/GaFfGKA0BrTSQN0BoZx3ieRyp1uxZ4JPzdo+SHsPMA3pljBOdP0qcj4hsXqI5tRw5voJzK
      Yl07R6Zewi3M4GlNEMVopbBME6M8TyWVx1IRcRhiWA7uyDjy1PvkiZj93p+TSyapJVPoOMLM
      99Eb1bBVHR1rwuPvYLgmRlQjkprS6SOYfo2k4y7bZiEEqVSKcrnM6OgotVoNx3Fw3cY5MzMz
      zM/PE8fxp9WNt2F6ehrDMNiwYcOazlvWBPI8Dz+KOPgv/jv2/vYf4GvY9wd/jJHvI17wNDzC
      2pEQYP70W/jvvk5WBVQGx4m1xqvV0EJg73icYMd+akGICn1kMk1lw07mN++l4qRJ1cuEE9fw
      fZ/UC99Augl0GKCjkCAIMG0X27Kwzh3DSKahfx0s2PVCCGzLItJQC0LqVoKcUERIYOX3mUql
      2Lx5M47j0NvbSyqVwjAMDMNomR6GYXwKPdgZnucRRRFxHK9JIRuPP/74n0xMTCz6UGuNjyTR
      08eW514ikcuTGR5lYNNWxg88zcDOvdw48TH+wpQoeDQLdAvLNLEti2wygYpjhGkSBQEqlcFe
      vwm0xuobJCgVEVoTFudIHPwSMp1DTF0jEflYUkCuj/qpo4hsHplIUf7kQ2IhEePbsKsllIox
      Dr6M0TdI4cJZwjgCrSmlewmffAn92NPoLXuoVCpkKgVsa3VreCX3omVZWJZFuVy+113WFSzL
      Iooi8vn8moJhyx5po0n3D7QeuH/jFqDRCdIwUIFPdtN2Rvfu5+JbP0PVqogoeDQQukCzj5KW
      garOMzu6mcTmXUTzs0Q3LmONb4GhMcTTX8ZRMcIwMNwkem6K2dEt9E5cIFObZzaoY45vIbh2
      iYQUhOu34DzzFaqHfgJh0NDQyTTpb/wOAF5xHiORxEhnW21x9n+RerWEU52/62dKJpNIKT8T
      h4jWmr6+PoQQ1Go1EolEV7LYcQA0pkqT8pULFG5eJ44i4ijkxvGP6R3fxOW3f4ahNfUblwk2
      beGL/+p/4OiPvsvsscPYawxF/6pDSknPxAUq189jGSZG4BPVSlg79xMVZtEnPgDTQtYrZAyB
      nLvZig+kEwlqH7yJWZglnU4xt0BrUOk89rljxL6HMC10HCGdBNbAOgB0HKMCDyORIrh5FTk3
      Dc7dvzfLsujr62N6ujN9436iuf6wLIt6vd61J0j84R/+oV6OCqG1BjeBYbsE8zMYhtGIRLb5
      imOlkKkMUaWE9RnagA8LtNaEUXQb5QAgCENK+17E2bid8NIZEh/8DNdxVtVkYRiiNNQ9j3hk
      I4aKSFfmmVUS88AL1N7+CelXfhdUjH/zKvbQKP6JD0nsf47g/EnyF45iLwmC3c3zXbx4kXq9
      fk+utxbkcjnWrVu3JhOo4wDQWqO1bgVFtNbEWmOsIcT8CIuhtWY+kUOv34IxNIo+eYTk1GW0
      kFgLUV+tNXVhEgtJIvYxZXdhmiAMkVIi295N8z0ppdAIvFhBHGJIA2FILCEJtcZeCLrdq/f6
      WQ0Ay7KwbZt0Ok1/f3/X5y07VMqVCtlMBiFEgxPSO0gwfbOj5nqE1SGEQOf7sXc83ui/575G
      +eJpjFwP9cnrZM8ewZCSJDHouOW5WQlxrAiikFoiQ8avYpgmhZ5h1OAo8sZFDL+OUZ4n5bqk
      DYlScpGw34/5WgiB67qf6gAwDIPBwUFSqRTWGmeyjr0shCCzQCqChp0alYvs+4N/jbtu9JEL
      9A6gtUZfvwhtfedu2oHZM4Cx4wmKI1uX7dcgDKkYDvN964kWFphKa6ZTPRTGdhJt2EEpP4QX
      hoT9w9jbHsN88TfQL34TDAutNWUryfzuZ5jpW0+sFCVpU3AzFKRNGZOy4p758fP5/D25zmoQ
      QrSYn7Ozs/i+v+ZryOU6vZ0TEoYhWkrKUxOMHHjmEe3hDiCEQIxvQ7T1a6vvtUZJgxLyNjqC
      1ppqGFE1HYyDX6IeN84Jo5hYGiT3fgF30w7EzE1UHONu3d28IdGJD0iakqqVQH3pNzFHNmDN
      XGfKzqBe+ibyxd+gmsigX/l99G/8cwrrt98T5ea6Lo7j3PV1loPjOCQSCfL5PH19ffT09DA4
      ONgKzK0F0uwdWHXkW5aF4de5/PoPOPO9by0aHI/QHcIoQqwbu+1zVatQfetVRCKJ+MY/pRwq
      arFGKUU5CFFKE+15GmPLbiqHXmu4O2NF4CRJTF4hrtfwjr1PGCt80TBPtVLoOMK+eakR09m4
      C2k7RBdP4VUqqFwv0nERlo0hDeLiHKpWQW7ZQ+0e6bY7EcZu4fs+hmEgpeTGjRskk0nS6fSa
      k2EAzPTA0KoHaa2JgL7tewhrVWqz00S1KqZ8tCjuFp4WWAPDrb+11sSFWcJ3Xyf5/DeQqQzh
      9ARB/wji4Ev4b36PMJskLM0jtMLZtANx8SSmIanHiuDx51DXzuPkejH3P0dVKbhyhrhcxHv7
      VRK2TVqFhLFC9A2B1hizE/DYQZzxrUizYRpZg8MY77xKHMf4vUPIMERL667eq1LqjoRxLWg6
      aaSUFItFknfIRzOlNFYJggOZPFuf+iJjTzzZuolXKnD2zdcp3bxKWK1ixOGjwbAMtNZEwxux
      2oRCeXX0iQ+QjotcyMqy+gYxX/gGQgj8sa3YG7YTXz2PnJ9qnNS3Dn21gCsF/sn3kftfbJhU
      0ia550msiYvUZqdw09lGKqWU+KaD2TsAQhDm+lEnj+Bu3tVYkwQ+laPvg19HZHvIPHYQ9fjT
      lN78HjnuPA2yKfxNB8r9QLVaRUpJf38/5XL5jmVPXjtxtOU+832/Y/5nVK0wtG3nopsk8708
      /s3f5ov/+t/y9B//98hsz509ya8ANBAFPjpqJJZorQmvXSA5dQW5+8lbB0rZ6uPE7gMYqTRy
      cIR4dgqtFGJ4nEgphBDkvArOOz9GeTWUVyeqlhFxRPXI2zgz129d07zFixemidy8i2CmQX0R
      toO1cTvJ57+OMi1U6GNmcnjrtxCEdz4AlFKLmKP3Eo7jtLj+5XKZGzdukM1mVzlreUg7kUQt
      +P2zm7ZhJJLESmP29BObFqE0iRZeXBPNUd38WZ2fxXAT950NGMcxynaJ2u79MEAKQX9xEvXG
      36PjCB34iMIMAghPfUQ4M4l34XTHc41cD2zeDUJgDgxTd9NAQ7smiFEfvIn3yQfID98kshwy
      L76C1zPU6h+h4kZ2GGBt3YOemWhliQGkD76Iu2kH+Rdfwcr2oJWiduE0N+cLzAQx4R06PEzT
      ZHx8/J4vhpvU56bJI6WkVqvd8fWM3/63/+5PThx6Gx3HbH75G4wdfI6+rTvZ9qV/wNgXnmVk
      735Gn3iSRCbbGtHNqa3ZyclcnuHde4mFQenKReRCUCdWCqX0PQm0KK1JjG1i59d/k4Gde5n6
      5KNFgZ87QdV0qGNgLXCY7qcJJ4TA8utUwhjr6DukC1MNk6hWxpueQPQPYeT7bk91lBJzYLhF
      OuTMURxU65qyUsSuFEiqkELvCO7Ox2FgBM4dxzQkRBHe9ARxvYYxMIw1thmZziCMW2aKEALp
      uGAYCEBFIfXpCRIvvIJXKpIM16bNm/RpKSVRFOF53j3qxQaCICCOY9avX08URfi+3wqEdYOW
      chACM5nvZfsrv8Xp139I7/hGbDcBCwtjaRg46QzuKg8vhMAwLTY//TzzVy6CUvRv20ludAwQ
      zF++wI3DbyOiO18nxEqjw5BTP/oOYaV0x8KvtaZc9yDfj37qy9RPHyWIAiw0xvQNMub983AZ
      hkHPpU8aVJIF2kiczJB4+bcQpomOIuLQb5UquQ1CEPcPE09cxDAM4jjGXkhkj2OBuWEbCAm2
      08jjACwUkWEiA68x87jJlftOCNJ7D5LYspvy4V+AhplKlaxj43QpYE1orVm3bl0jCj5/d2S7
      doyOjlIoFLAsi1Qqxdzc3B1bH+J/+7sf64uzhY5fto+UbtCsRtDp86nzZzn5X/4S8zPkC8Vx
      TFmYhDsPkNi+97bv68fexzjzESLXixUGJML6It7TWhFFESUvoDe9fCqh0pr5cgVMExnHGFLg
      9Q5jP/OVRazNJnQUUj/8Jj2Tl6nXqmTS6QYDU2tmRreT2P8cAN6x9+m9eAzDMCibLv7ug+gw
      xN28AyEEKvARCznC3vkTGNmeRV4qgHBumsIb3ye97xnw6+RPf9A1ZygMQ27cuIFt21iWxeTk
      ZLfdtiJs28Z1XVKpFPl8vjUDSClJpZZRHCtgRV/VWrX1SsdL01g250JpjUIgVIxI51D1CkKp
      xoCCe5Jo4Ychpa37cHc+gcHtHgohBIm9B1FbdyPdJDqOKV44gSgXMQvT6DgGyyJdmV9Rg2qt
      qcWaKpJ0FBHvehLv4nEi30MJQWaBpdiKsguB1TtIuGUP9A0RBT6iWkZYdkcvirRskk9/mdKF
      UzjH30WIRv/FUdTw9jT7NArxfJ9kIkE6rCMPvUpFQfXqOax1YygV403ewM3mkYPDRD/7Drz0
      TczBkVbbzJ5+Mk8+T1Saxz97HDGyif6Zq13JRbFYxHEcHMdpLYjvxbotCAJ6e3splUpMTU2R
      z+fJ5/N3HHf41LjLbiaL1dNHbXa6YRoJQWXiBlJrzL5Bkj29TB//iOf++T/FTacpTU0ghCQK
      A87/7EdExXlkm5dkragPbSC592BrQQidS4sYyYVFppQ4O54AQCuFlAKUpnTsXcS540g0aasR
      eIqiiHoQYgjwcgPo7Y+jrl6gNjBMcucT+MUZgolrGIkkhUwOPbiexKWTuHFj7aFNE2vjDsSC
      +9Bqa1srBzeOEIaJCkMq7/8ccfEkTsJFmBbzmMRCEL/7GnG1jL1pJ4ZXo1L3GhrYNEklEyS1
      Zs6voeKI+icfkol9wpsadfYoRhwTvvFdjN/6I4TttO7tbthC5eP3MIfH8SauEQuFaa6ukAzD
      YHZ2lsHBQdLpNOVy+Z5VmGtP4KrVavT19d3xtYyv/t4/+5NC/d4uUjrBTiRJ9A8xuu8LbH3h
      y4zsPcCGp59nYNdjjO55gnOv/QDXtrCyPQxs2kqqp5dkvod0Xz/r9z9FaniM4o2r6GDtfA+l
      FP7mPRi9g61FX6d/q0IIRL6fINODfOwg4fXL2HFIIYbowIt4ySzp57+Ome/DHt+KNTiMkBKx
      bpw4kULk+zF37ccc3UQ0NEbd95HlAonQx5+4SjwzQRx4GD39i9qjAh/v1W9Bvg8jkyOcvoms
      V0mpmDAK8ce24zz7VapH36e3NEXdSeI+/jReGOJfOY9wky3Wp2cncA5+CXvTdirXLjFoCVzT
      wAsChOMiJ68iN+5oUxQCs6cf7+IZpBAYUYBjrG4Wuq6L67pkFgiV92MxnM1mGR8fv6ugm/HV
      3/vDPynU1y5Uq6HT+iGZy5PI5m55HqTESaaw3ATr9uxj6sI5xp98Bjez2PYVQpDq7SM5OMzc
      xA3iaqUrga1HMbWBMfzNe7C27F71nKWDoeOUHUeoaglrcBQ27KAWhFQKc6SefB53fAtaiMZA
      WZittNYI08TqG8IcGG54WwDpJDBGNxIOb8SLY/wwxKnMo70axobtaBUTlwrEZ4+h3n4Vq28Q
      deZjmJ1ACoGcnyL0fXQyjeobwlw3BnGEnpsmshPY41uwBoapnfgQ46u/DdfOY6GpFeZhyx6M
      VBqEIDFzg0BpXMchKTRFzyean8XZsPXWMxsG/tWLyMun6c9mVu33Zl9aViOiXC6XmZmZ6eq8
      bq+dy+UYHR29a1rOPTWBlls0t9t/ywlhMpfn2T/6N4vIYkuvK02TnV/7DWbOnWbi8FureoLq
      SJxnv4ZYcMt2WqQvZ5cu/bw1KNpME2Hb2PuepXfvU2gV337skjVGp3sZ2TzG/uexoKGt3/4x
      0Q//mrAwR8q2iLWmumUvzuAwoWGRvn6OnOsSmgaGnUKrkPkTH1C+eY1UvUjasdC9DT68ME2s
      0U0YmTx1YWAGPurxZ7ESSaJyEXXqIwxDYmlFGATYrkNGQOXCCWqpNInHnwLZ8DKl9hygPDvJ
      3HyBnnyuKwWktWZ2dhbP8+7K/k+n01QqFVzXJZ1O09vbu2ba83KQ8OnQF7oxM5YKf3usof06
      21/6Kpu/9k1iubItmpMQvfsaKgw6ft/ppbTfs7Op1OFCUiJMq3XOcvdqt+uX/tO+h/7lD3AN
      QdqvkrIMqrHCq1YIL5wCYZB6+svUx3dSshIYhiQCIqWJhzeSeuZlan5AcfNjWNv3Np5BSJIv
      /hraq+HWK0zVA4yFRa6RypCwGxraNAxcx6HiZtC/9gfoTB4unSa8frnVfqtvkPyv/x4FJ83V
      iUmCMOz4nO0IgoB6vU4URXcVY0mlUmzZsoWNGzcyNDR0z4Qf7vEM0P6Q9y+o1Lju+scPkBka
      5qO//lMM1dkHbEhBduoKpbdfxXzx17sygVb6G1jwZC0OCN6LZ5VuAuvX/wBvZgJPGoh0DjfX
      Q+EH/wmZyWGNjDc8Vc98GRX4lCavY+T7UIFP0nEbJo3WyLGFWEBzEJsmJNNEPYM4bZ4iISXR
      nqeIjrzRck2rZBpDGmQMgROF1K6dh7HNt9poO/R8/R/jX7nA9MVTrIv9FT10s7OzjcFmGJim
      2aoxuhb09/evKcNrrXigM9iXmk6Chvw1P8sOrkOms42IY60Kfv02s0gIgTt9jeqHv0T0DOJs
      3rHs9dt/Lr3G0t+XGyyrmXpLz2/PrTByvRi53kXHZl7+DWa/8xdkw6DlnZG2gz22ucGIXDhW
      A+aTL4LoYL4ZBuG+5zEWKkmjdSOo5nuL5v/k9HXC7/wpSdsCy0Sr+DbTzcz2ILfvpXDtIhcv
      nKc/nyeXzXZ83mYk+E5doEIIMpnu1hx3ijsaAGsNkN0Nbr+HbhDDFhaZ6b4BBrbvZnjHbj76
      9l9Qu3Z5kTD6QUAgDLKXTzFx6Szx3BSJJ59fUeCXu/dyJtnSz1bqn+biX0rZKuLUfvzSa5m5
      XhI7n7jt2p2Q2LZn2WOs3n7Cm1cIy0W8iWs4fYOkTry7aBFpWybNWG/ddJD7n295WKIoonL8
      MNJN4m7aQe5Lv0atfx2liatktdfxWROJRMvzcyeL1WQyuWo90maJ+aWl3aM4Ri3kW68Yn1pz
      qz5jvPef/ozLR94HGg+/4yuvkBkYxDBNHv+HvwuZfOu7IiaVPU8TP/EcdQSmXuDGL0Gn9cly
      wtv4/PaB0M25zSSOJqSUi+zZ5WaazP5nW9ydtUJ5tVZb48Ic8p0fE3xyGPPQT0gYneMqYRzj
      H3gJmUzfes44RhVmEYffoPTLHxMV5pCZLNbc5LICFgQBtVptWZZxJ2SzWQzDYGBggLGx2xOI
      lsIPQm7UA0rSwgtCKhjM1+oUUz2Ut+2j7K3s4byjXv00NP9ykDomrNe4efoEves3kMhkSWZz
      XProMNMXzxMV5jANybSVIvHl38R2GxpEb91DRsUdBelOPRSrafrmz+bM0dT4Ta3a7plaaRaQ
      trPoumtpr3fmGLI0j/PsVxGFaarpXlLhJEaHYJZaoFobQhKd/wRjYLgluFor/GsXGXAsZq5d
      QOx8gtoHbzHo2svKQzabbXGAVuPqNM2dVCpFOp2mp2d1er3WmplyBTm+jboUhKkccuc+lO/h
      jm8FIfBqVcJrZ7CWiV18aoGwu4FesJP9SpkbHx2mdu0i82dPMnfjGiN79wMwcfIYpZMft+xc
      069RmpvD3rDtlrdlyTS8mp3eun+7wMURUbmImb89+riUJt4JxsJU3dx8opNg3EsFYw2tbwTS
      Lp3FPHcM58VfRwMJr5HR10SkFHOj2/F7hqgNb8TeuQ9hmpim2RgYUmKPb8X75DD5ZILCpfP0
      GJBdpqI03EqMaT7ncv0iRIM9OjY2RjKZXFN5c8c0MCsFgvwA7oHnsXoHW+soIQTGwDr8Ux/h
      LjMAHuhFMEBldob3vvUX9A6P4s/P4hoCIRrNrt28ygf/+c8Y3f8Ulw/9grR7S1M6lkWyViSa
      mUT79cbi+ewxxIbtOJt3Asv7+ldCp1e4kju13bwSQiwq4d2tJl/rmqv9OK019tY9iAsnMTJZ
      ZP8gRv8QtWsXiT95l2TUMBHqdgJn/3NEc9ME50+iTIvk5p2t9YpSqhGF/sKXmX3vNUZyWbRa
      nRKRSqUaazHfX7aYghCCfD6/5oEvhCBGENkuyV37MNLZRX2qtSa4cJLMCjmPD/wASPX28dwf
      /DFHvv1XRDOL7U1DCOrXLnHi6uVF2qyJTFgn+sXfI4QgimMMKalu2rnomPYFczcCKdr+X3qN
      drTPBt0G3zph6Qtder+VTCeAYOIaBB7u6SPEYkELqhgVBlT6R5FXT+NaFq5XpfjD/4hZr5BH
      UfzkfYJUFj14iyEqhCCx/TEK1y/hTV/pin3ZrNu/knArpbrm8i9FyrGxwpD5c59g9g22PtdK
      EX/8Nslr57Ht5eMGd5tTct8hhMBNZ9jxlVeI49s1iBACRzYWlIUY6mrxd5ZpYhoGhhANP/Qy
      2W1LP9Nat8yUToLXOUh2O7foTl2A7ffp1L6l7Vj6u1aK8keHkMcOkTvyc9zQw0+kia5dJDx7
      nMQHbyC8GpWeda31iVUpkHUskq7LuoF+vJ9+G+/McaCxlqgdazgf7JENzHbJ7zcMgzAMV40B
      3E02Yaw1qckrhEfeIpqdIrpyDvHTb5G7fo7EKm4eEzqH7h805EdGSQwOE85NdfzelBI7jqlk
      +wjnJsgmGpwbpRSzmJg9QxgHX8ZK384zakdzml7qGVpL33RlSi0z8JYOsqWL5CYsy1p5DSEE
      ztAI6YvHMRdKnw/4ZQrH3iUV1BGmQX76amtTudC0sXXQmtuEEAylk8xMXkVv2Yk9toXSd/6M
      8PJZjPGtpNPd++ez2SzlcnnZPsxkMqTT6a6vtxQJ2wY06uoZ4ksnkbLhcaOL97BofCzVXu3o
      1kToBpXZGT76u//E9KULqx4bRxFXPv6AGyeOYSaXn3KllCQtg/7aPJm2tUAtirGefwX7S7+J
      menMYWnX+LC8ptdaL1iTetF5nbDWAbTURWpZ1m2ftV+7uRlEJ2ilKLz+91hv/eg26nJeBWgp
      KT3xAv5CbnAcx9hxSGi7RHFMEIbUvEaUNzN5Ge9v/xQ1c5PsP/rnpAyBdfRtrC72E2gim80u
      K+CJRILh4eGO360VUgosy1xT/sia1wBrXZCpOMavVQmqFexkikQ2x80THxP7HvnhkWXPi6OI
      2SuXOP/GjwnnGuW2u6k3096uOI7xdz6Jk+9bVhs0hXip9l36d8sUWuMCths0vUKmabauu1S7
      t88CS/lKS1E/f5L05BUyyzA3pVa4n7xLEtWoSN2zDrdaRLzy+5QnrqPnpzGGRokO/YSM65IU
      gvCjX1A1HYL8IKlygYTbfbK7EILBwUGqHTZTjOP4vtcQ6oQoipBS3t9FcBxFvPfn/zf1qQmU
      1uz85j/BtCyuvPcWY194DmuZfanqpSJHvv2XBDOTmG1acK3RxCCKGuSvBY2wGm9Haw1xhH/t
      IkYm30hSl4sLyqo24euGB7Ro9uhwfPPv9mSf1dyjKy2MtdaYl0+TyyxvUliGgUWGx6MAACAA
      SURBVIUGGmukTGkWVES9OI89ugFGG/tshc99g9rrf0sq4WJJQV4FqJkrzMcxZhyvSdO6rks2
      m6VQWJx+ey+JbWtBc9AtOwCW2p134pu+/MEhwtkpbMskjCKmL5yjfPYEIo7p3bRl0bFN4fAq
      FQ792X/A9Otd5w8vpw1d26byk2/jP/YUqV37GtTeDtqm+azK9/De+jFKGkQDI1S/+1fY60bJ
      feUfttieDS4SHc2lTtdd7fdm+5uuxua/bq7ZaRaKSwUS5TlEF1lb0Bh4LlDywkU5DABm7wDe
      k1+ievpj8l4Z2zKRUtK7wuBaCc3a/b7vt1iiqVTqMw2s3p8ZQGtunjzOtbffaGlt0zAonvwY
      I5nmwD/9Y1I9fcxevcTk2dNUb16jOj3J+qef5+aR94h9f00NC4KQWMUk2wIoURxTd1KYTkzs
      JghmGknZ7sh4R3NHhwHBodcwewaw9z1L7dwJzHoF6+YlKn/3/+E89w+Q2Tw6CokLs3hnA9yt
      uwC57EywnPuzU/T3VsT1dqWz0jpj6Xfq3PGuMraWIuHYVGoV9JIAn71pB4GUcOTnVDyftOsQ
      RhF1zyO3RqJac0M9aKQ1zs/P33ey22q4ozWAiqOFlyiRhqQ0NcnspQv0jm8kt26EoF7jxPf/
      FsdYspg0LXb+2m8hpcEv/s//HaFjIt/HtW1MIbj6i9cwDYnD2mYcx+nkQxZE0iApBeGF4ygN
      8dAYjIy3nqNdgIJLZ0jO3qCa76P0xvdJzd/ESCXpXSj1XXvrBximSaA01rpxymeOYfX0IfrX
      4V85hz04gkymV9XQ7d8tFXDbtlt0hOb3TdJcFEUdr3ebSeVV19R3QRAgDQMpBKowCyMbbru2
      juNG1YWF2dPL9OJnDXRt/o619+DgIJlM5r5Wke4GaxoAtcI8x7/7N3iFeeIoAtMkkU5TnJzA
      kYIzSrPlS18nrFYwMzlUpdCaAWINu/7R7zKweRsnX/8RUoCIFYm2DrC6nLa7ejBD0hNUwTRw
      wgbVo+DXiUrzmJk8wdw00jQxsj3E1QryyC8wLRN99hj9UjcCM/YtPkpqwa3qAnruBm46Qf36
      Rfzrl1C+T3D9Mtnnvtpxsd0U6vb1QCc0TSG4xRrVWje2pmozjVacGZzuaQTArTKDGFibd3Uc
      wNJNUqnWyGczaK2p2wmMjTsov/1DsnfovrzTMib3ElrrxgDoxrNTKxb4+G/+nLhcQLLgPw1j
      onmflN2oNOzoiGs/fxXTbASemrucKKUY2v80g1u2Uy3MMXHkPcIwJLEGV9q9gLpyDi6eIsj3
      EddrhBt3knzy+UbNzJ4BatM3GFhI4l4JQghSOsa6fIqZZB5vdhqrd4D62eMktu+9TUC7DYa1
      B4uag2W19cDSe4jNu5lVmtz1s117V7TW+OncImXUfk0Vhejnvk7x8M+IMr24T76ITCQpZfrI
      qM5U6AcdWmv8KMZsfy/L2bIqijj+3W8RlZaf8oQQt63otdbEUjL61Atsef5lAArXG3VlEtan
      v9VSb7KhxXXkEUlNZXiMuFwkePN7RFM3ibQmm+4+w8s2JH3lGa4U54iLc4Qzk5h9Q1htIfl2
      LOUGNT9b7tjVSHVLKQZCCMzeAYwDX8SbuEya7up6CiHoLc9QOvxzzIMv33bNxMZtAPiWjTOy
      AURjDwI5tJ7C+WPkk91tSfqgQClF3fMoVaqr5wOoOOb4D/4L3sS1O3rI0YNfZNuLX2lN7SO7
      HyczOr72VncBrXXXvHMv04tIpNA/+zusOMYfHCOZSq/Z1WpbFpmEi7QdpF8juHGp43GLaAod
      hHvpwFipr9vbuPRazbVWkO2lEmuCaHkWZhNBEBArhXnpFMrvzAwWQuCs39Ri1AopSe9/jorx
      2drwdwIhBIHv4/ve7QNgabDlxKvfo3j2xB1l9Bi5HjY//cJtNzfctdmpa8FqmlNrTTmRpT40
      TvTGd8kSIysFMrPX6Ums/WUKIejNNHYnCTyP6idHCK5f6njccl6h1Y7rdMxqppGx7znEP/wj
      vC/9I0pjO4iW6RKtNeVKpVGhTkqiwuyy7bntp2Gg0zl8v3PRgQcVQjQ28rMWFv+3oflibp48
      xszxI3ek+bXW9G3dhbHELJo4c5LazL2pE7kUTTNsufbWFczEgmDzHsRHb9MjFLFSjQSMO6Dj
      NmFbFjkDZBwRzc9Qv3gG79yJVptWol8s/dcN2rn1y13f6ulvVJbuHcA68DzVbU/gdfAkaa2Z
      LxSpex6BBmuJG7TTTNX+0x4Zp3qXZU8+C7iui2VZy5tAVz56n5Pf/Ztu+ETLwu7A3Zk6/Qlx
      YQ4hBLFSBPeoXN5KUEpRqtWZMxPUS0Wcd39Kfy6DYTT21u1G666GXCZDKpFAJlNUTxwhrlVX
      PH65+61Gc7hTmLsOEH7tdyn3jVDBoBY3vEpSSjaMj2G7CaK9zyK7mJ3bB0H68acItj9BqVx+
      aDZPjOKYYqWKdBOYnXIF/GqFs2+8SrlaJZ3OIMXtgZtuEPqL94ot3LzecJ8uQAqB5/uoKMLp
      Ykf0tUJrTaQU86le1Nx5+k0DkUkSBLem7Hu14Z8Qgv7eHubKFaRtEPur75O73MzQrddore0z
      Mjn0F78BQFyrUP/xfyQlGy5Q+dw3sAdHWse231+2efM6zQjpx5/GHxxh5sJJMvOTJDrGZR4M
      KK0p1n388R0ktu3pzAZ10xle+jf/Dmm7+PUaAweeQYlGqL5U7W43DiEE1albpk55ZoqP//pP
      qVw4vUiDpFIpXNe958KvlGK+VKZWq9Ffm2ewtxfHtrEti/R9Cr9rQKQyuI5DXCkRTN/sSpCX
      Lo6X5iGsdOxa0YpHWLcUjo3GyN7a23clzhI0PFC2bbeuZSRTpLbswtq5D99NPbAzgdaayVqA
      +MJLOCPjBGeO3gqELX1gy3F5/l/8N9TLJUZ2PYZhO1x+95ekhnrQlWJXAlSbbbA4ozBg4vQJ
      dBR25OLcSyitqXs+Nc/DtS0yn2KwxZAGvoKcbROdOcrMxTMM/d5/jbEkQtzEagK8Eku1XYmY
      prlspHg5CMOgbthYkY8Iw0b1PPdWCZL2mSheiAS3/90k67W3zR7diK8Usyc+pN8vPZCuUYFG
      9g1h9Q7gV4rIZpd1Whz1jm1gdHcjsNOzfgM9GzYz+ti+rm/mFeaIw5BL77/DjXfe6Jo9uJz2
      W+7YJnsyCEJqtRqWIenP5z5V4QcwDEkubgy+sXVDmF6V4qE38G9eXfG8bgfC0sVyM1+gG1bq
      UggpUbl+fKWwLRO1QDlfrQ3tEe1OA9Md30L8AAp+E7aEqDTf6MMobJhAK72A5kM6qTR2KgW6
      ++lNApW5Gco3rrYWm12dt8I+AFprKtUqs3PzFIpFSuUypVIJAMsySadSren5s0Am4WJbFlJK
      hgf68a+cQzruqjyetWjvpjA2tXBzMdsthGhkjLlfeAGZTDdKoy8R7PYZZi19qcIA5zPcBWgl
      KKUoSwfTTRL/7DskL57A7LbjLx16k9lzp9j1zd/hulKrUpW11gg0x77/t+j5mXsmkHEck3Bd
      XMe9VervAYIQgtQCK9VxHOximag4B0Ji5vLIOyxwtRTN99a0t9tJdKu1rwkjlSH6wstEVy9g
      dSgYthaoMCB468cwN0XdSpBV6p7s7HMvYRgGg0Ed4+0fYlsm2BZmM71vJY0LUJmaQEiDwU1b
      +WSVqszQsMVL1Rp5OX3PPC3AZ5I9dKdQSiPyfVSPHSaYn6bn5d8kMbapYwn4O0Fzwdwky3V7
      TrtWt4ZGMQeXz8xbirg4Rzx1A205CK3Adhtru/PHyZdmKKzfSurmpXv6zu8l2msOaa0xy1OT
      xMpAthGhOi2+pGk2SFFKkRpcRzg9wUoIfJ9cZu3Ugs8TDEMypCLm0llS2/ZQ/NF/Rv7a7+K2
      VVzuRGhbC9rpH1JKlO8h7MUu5eYAWZqP0KkNKyGam8J+87sktaJU91G5XpJeBXthJvaVJs7k
      qVwMUF6FXC57V5sM3m/EcYzpZrJc/eUvGd29FzvR8AKoOL7F+RACFcd4xXkSvf0c/e63mL98
      kaTrLCvcURQhpHygH/7Tgm2Z9BVuUohDsk+9RPXNH6K+8OKK3rDWgECg6T4uIIQgnJ4gtXs/
      MpFs7QLpz0zhnT6KvX4j9vpNy95vJQRnj6GPvYe3cQdeOod5+ghmUCcSEmehfSU3TWrnE7jj
      W/BvXqX8wc/JrVA68bOGaZqYTirF8LadlKensFyX0vQUQb3GpiefbjX8+rEj4Pt4ah6vME96
      hXJ4sMC1+IwTHR4kWJZFX22emzdCtGFg5Hpw1q1fpInbhbzdnOmGP9QOd8NWovkZwpkJtFIo
      v074wS/ZMNBL5eY5KtVncLfubmyK3aVgRnPTRBPXcF/5/YZHa34aKwpJGAIWCql4scLYuR8h
      BNJNYuZ6mC8UyK3rzIx9UGACOJkshalJNDCwaQvz129thVktzHHute9jSoFwE5iJJOEyXB6t
      NWEYPlR2+qcFKSWJwXVU3WQrvxg652I0B0MnAW0PhHWEYWINDGMNDBMefRfn9BFIJylWqvTm
      shgn3qU2MITZO9jVglkFPtWj72KvG0PVqyQ276Dy0TxGFIDR2ALVdhwMwDnyC+KPfkm5MI9y
      EsihUfywhnuHVd8+DcgmFWJw81Z6148zd/UKfeMbWy/h3M9/irGwJgjDiHqt1rFigVKKaCFg
      8qts968EfeUc+Wdexu6/3eOydDZYqQ+7oaSoapkgiqiObsF79hv4W/YypU3K/aN450521V6l
      FFop7JENJLbtIZi6AUBi6y5mKzWKtTogmFESQ0DaMsiYkoF8jgHXIhvUcD6jqg/dwmzXASqK
      iAIfa8FvPX/9KnOnP8E0GjQIvzCHY1vINvdWIwil8HzvvlEMPi+wTBMW6nN20r73gv/TGhzJ
      NKkDX2x9rrI9+PPTxDMTREpBWEdvfQxzZENHhdZqi9ZIp7EfsV5goSqvjty2l1qlSL1WwSvO
      E2bTNMXCWrAAnAdb9gEwm+J69egRtFL0b9yEEILyzBSf/Je/xjRuEaGM8S2o2QlMfcujUK7V
      cG3nkfB3A8tusS276avlFr+rnduJsFY69DrZ6WvUNuwis/9Z5E+/hfHBG6iB30cYtwpy6TDA
      u3SmVZJeWjbuhq2oMMTq6cf77p83jusZwh7finnzEv08vGavqVmYcg2D9U8cQAhBFAQc/fZf
      QXArO8gwDMzefrJPvcDcuz+neOEMpoBsFzm0j9CAzuSX3Qa2U1S43V9/N7ODUgo3k0HFQ6Se
      +TJxYZZ6GJNKu4QadK1KfO0Col7B93zST7206Pxwdor6z79PNqihAf+Lr5D66C0ys1cbptpD
      KPytzUoEUC/MM3/9KvVykbHH9nHq1e8RlwuLOr8mDNZt2UlicJj8wRfwyiWcanekuEdoQGeW
      3/XkfiSUtA8so1JExBFojUim0fuew5u5idAa793XcQ2JNAzEjltcLyEEUbWC+csfMGQoRDLR
      uOahVxtbrD6Eaz2lNWHvELnHDxJ7dcyZi+d48//6P9BRiOM43Hjn5xgs1kherND9g8wfeoPq
      +Bb8I2+TFCAf8AXOgwa9TAS9k6mzmmIxlpR7bHedtv/eMm0sG+qVBmXbshu73JgW/PCvMNJ5
      xNNfA8umvYVaa6K5aZKhh1jw5AghSD7AfP/VIIAYSA4OIy0L89TrP8I1DYxFD7W480005RvX
      sC1JOHMTcwWy2iMsDznfubQ73M7z78THbzeNmhU4mp83o71BEHSmRWx7nFirZh0c9OwkhtSE
      +57HXb9pUT0jrTWqViGYvE549jhBqcxQ/+1bQj2MEEJgANWpm8SVEqa1wFxc5Sz6DzxLcPY4
      dvxwJUA/SNCJ1YtIdUNtVkrhrZKHu3RWWcT3EYLUS78OQmAt/N28N4Dy6hT+5v8hLWAon4O+
      Xj4v0FpjJtMk+4cIbRszmUyu2uFxrBjcs4+CitBnjn5KTf38wZy+ho6jRpHeZfq8W++Q67qt
      2aKZEwDg+/6i47plh2qtQWsqn3yIkJLBXOaBojU39wK+W2itccc2UblxlcTA0OqlEbXWiEQS
      w7IJJq7xyOq/c9h+Ha8wi+wZWHUArBQhhluVIZq7sS+tFbSUYrFSVLkJf/I6/pVzpGslbPvB
      EX6gxSvzFjbbS9xhGm0Yx9gITNvGcFykLxoP2sluVEpRqdXJHHiO4oXTiGW2J3qE7mCbBuqN
      v6dy5J279voEQUAYhvi+3/oZBMFtWVvQeVbptMaIC3OoqeskjbuvknGv0aJvmyaJhdmvfgfb
      +9qmSTB5HRVFSNNCJrc/RrxE+KWUGIZBUQkGv/IbDDxxEKmiBy7B4WFExhDYtr1qUvtaM7Ha
      z4PusvyWwuztx4Y7Kq/+aaG5z7KUcsXdH1eCf/U8xcO/oHj6GKa0nUVeBD8IsB0Hs6efx//o
      XyIMk9j30KvkjD5CdzCkxL5xEb3jiVYA6W4EHZavMLecR6kd7cnv0rTwuzjnQcGdKGQhBIko
      gCig+uFbmOUzxxs16JVCjG6iZ+tuIt8j0dvPjY8OY9g2E2//jKSOcB+CTnkYkPLKFD96C/PJ
      Fxe5H1dCp6IFy5k47cK/FnjXL5EUD1eFt7tBqm8AU5QLBEFAWUvE5ASVWo369CQjz7xI+e2f
      YhkGyVjhrmFTtEdYGUIIrCtn8GYnEbsO4GzYtiaN2415s9ziebnBUj9zjPTpD0n29j4U2v9u
      ESnF5qdfwAyCgJLpMvLsl5h69+c4fp2EVNTfe4Ok2ygnLmX80EyLDwtStoXrlfEO/YQg8JGD
      o40sumW2cu2WE9Stx6d1vFIEHx+i5/KJJcHQhxtBEHSsE6u1xuodYOdXXqF3/QZkMpFA1Coo
      3yOnQux6Gcs0sdsITiuVKXmEO4dhGCQTLtYn7zIoQrKlGfTFU4TTN1tsTK0UweQ1ogUP3FIP
      z91Aa03t1W+RvXzic5e+ulxwN1aaXb/+j+ldv6FBhjMMA0fA/Hs/J7eMBngk/PcPQggSQmNI
      SXj9ElalyNDzX6MyeZko8EEpBodHEabJ5I1LiOENXaVJLpoJtG4MKAGIW8osnJkgXytgPIRs
      ztWwHD07ObKe7EAjIUnrhS2SbNNEdKqS+wifCgwpKXzwFu7YZsIbF4nKJdbteWLRMVprRiyb
      K5M3MXK9hFPXcce33ib8cbVMVCpgpNIYbpLK8cM4k1ch8BBAuGEHppPA2rob/8YV7myHr4cX
      qrkN1YKTwFRaY9td8IEe4b4giqJGdYLCDGEqQz3XT/XQG2Q3b0e2aTEhBG5PH/3zc9Qmr7B5
      734unziGHmlUedBRY2+C+I2/JyM1sdKEiTSWVydJ3NqNMb70CVJKShOXcB5/juqlU+S4PSPs
      YUYUx4tMurrnkUwkUEKy+YWvUJyaYPbKJZxkCtncsLgb3A/O+q86zLZYQOXcSQaf+RJ2HDLx
      2ncJO+wx0Lt5G6NPPAlS0j84CJUiAOV3for1+t/S65jYtk3CdcjqkD7HXLQVaTOQJGYmMDJZ
      gp6Bz917jaOIYqVCuVrF832kkNQixehzL2MlU0ycPsnG/QcZ3rkH48CBA38yM716kKtZhezR
      THF/IIRA2g5k8tjr1hOd/pjK7AzpTdsQbXkE7cJqpzLUrlwgdFOoQz8ln16d2Ni6HwIv04Mx
      OIp19ezn6r1KKUm4jRqtlmVRKpW4ee0ql468z8k3foKlFb0bNzdmgOYeSauV1rtXnodHWB42
      iujIW/jXLhJmepE3LzF/5sSyxwshGNi0BWfySqNw8RpgGRLj2CF0FMLnbAZo32u5VqsxMTFB
      KpNhz5MH2fPkQfbuP8CWbIr5c6eW3x9gKdZavbibaz7C7ZBSUrt5jfzzX6P2yx9TefsnoDV9
      exqpikspznY6y8jux7l+9BCo7rebEkKQ0xGFd1/DsAyCIGhtmv15wtzcHFprevoH+KP/6X9Z
      JJPTN66uvk1qOx4J9KeDpCmpfPAWQd86bCmpHXqd8qVzjWrTto3ruti2jWVZDaENffC627ln
      KfJ2Y01gmubnbi1QLBYpFhtrpE5uURWr7meAtQj/gzxQ2l/yg9pOKSVO5EOxkX1nG5LiG9/H
      7ekj2d8oNdj+HGGtsiYbPoqiVuqk53lkMpnPdE+F+wGtNTMzMwD0Dwzyu//mf+S2pxOsbQb4
      PEApRd33qQfBou1GHzQIIXBlW0QzDJj76F3CMGzlAoRhSBRFGKlsI+m9A5RS1IKQuhaEC94+
      rTWJRIJUKkU2m8XzPCYmJhZlkz3sqFSrgMBNJBBS0Dc0fBvx0EkkV88I+7zBMAySC9TvcqWC
      NAzSXaSFftYwTZOofruZo7XGTCSR68bg5uXbT9z+BBueeYmwWubG3/y/WNBKqAewbRvbtkkm
      k8zMzDTs5Z6eVsrlw+r8SGez/NH//L+SymQQQnakTgshfvVmgCaklGQzGaL+Eer6IXnB5SJ+
      YQ643Ss39NIr+EueI1KK3LbGZuVzx48sVHPuDMuyGBwcZHBwEMdxCMOQjRs3Em/aSdA3jPeQ
      zQ5B3SOOY5xEEnuB1LkUlm3/6g4AaAhRtjJP4iHgwAshMCoFpr/zl8x8+A5BsdD6HMBwHHr/
      wW8R9a3DT2bRG3di7XsOJ9dD7dLZRrL7CprcCyOCVI5mSRytNVevXUOYNlZPH2GmB8/3yfb0
      UKs19kB+kGMHtm0xcfXKisdkcvlfPRNoKYwHOP1vKYQQWDom+vgQkx+/i7v3IPnd+7CSjRhA
      enSc1MhY6/jJw29TmbjOE3GJGVaO89imQVgugGykG1qWhYpjopMf4lgWaa3BtpmZnGzlhjyo
      +wFDowKcm0isWBnDsu1HA+BhhBACG1DH32fm6Lv4SNzNOxCGSXDzComN20lv3YWdyWKnM7z3
      zmF0rhdPSMxMlnhuGjvwFs0IUggcazEFHmiVN28e+7DECpQwuBEJ5s5eQMxOsu+JfcxOTRKF
      Ab7nNRiwTTboIzy8kFKSAPTFU2jAFoLwk8NcP3eSTb/zLwEoDo8z/uSzIAT+3AyFi2coH36L
      zMNQv/wOoLVmYO8B+jY0Kp1H6Qyv/fD7HDj4FL2DQ42SkAt4NAA+J1iqzVN+lWt/9R+IHRdr
      aD1XXv8BqeFRnFwvfbv3Uf/o0Oc2Yi+EYOLohwS+j9aKHS98meyGLfQMDOAu7IPXxKMB8DmF
      EAJHx+BVURdPEoYR5qZtpEbGqM9OIaIQVjFnojgmNm3MKLjNjfigp8iqwMcvzOGVClx8/x1y
      60Z45/Wf0j84RN+6YUbGxoFHA+BXAlJKko5N+c0fogIPv1TENM1lBdjXIPN9iHQO7+wnDGzf
      hSkl5UvnWsQ5PwhwbLu1/eqDtjZIug7h5HWsfD+bn3yGVF8/ke+jTYMj77/NyNjYYirEI3z+
      YWpF6cJZ+p44SPH6JSjOAhArhVyIK3i+z9B/9a+wkiniM0dJ6oiDv/PP0Epx5eMPEEIwc+YE
      +XSGRL6Xsz97ldQDupYQQqD8OlEYMHvxHKbr8v+3d6ZNcl3nff+dc7feZ+vZwcFGAAZCkKAo
      Ulso0bRFWXbiSJFddrkUp/LG5aqUvoM+QV7kVVKVVKqylSqulB1ZqRIVmyIlkSLBBQuxERgA
      g8Eye6/Tfbvvck5e9PRgetAzGAwG0z3A/b3BoG/37XOrz3O253n+T8/oPjLPHeTtn/+ceqgQ
      P/zhD/WZM2c63daIXSIMQ4JYgnBgBFEuYpoGvqZRB2z2Ns7xUwx99Q3qhRzxwgK6uszzr7+5
      oSpF4NU5/d//E6qw1JVLIr1SEOTP/urfsri4QM5OEEulmT5/hoOvfOXZdoQ9ixiGge3VYOoq
      OgyQIxMYizP4i3MEYwcY/vqbCCmJ9WdxteDIN39v045tOTFGX3iZcqXSlXFVQgi8UoFiPkfg
      eUyfP8PUmU9I9PTeT4qPeLYQQpCIOahqieDCx9iWhRl6pI6eaH1fdpiP3vsljmUyPr4PISA7
      8WCl+dtnTuNWKqggoKenp+V7ugHbsvjZf/mP9B97gRN/8Mdc++BX9L7QEB2IDOAZRkqJvVJb
      IOY4+PlFpJSrHt5Ybz/xvgGUCpkrFqhN32Bw/6GWe/g1l3q1gjQaSTVjY2O88cYb3Lx5k3ff
      fRfHcbrCEEzDoHjtEudrNY5/559z58I5njt5KjKAiBW1NMvCrXurytWta36LxOg4uZVC2UG9
      zszkFex4kmIhz8A//TbBr95GVMr86Ec/YnBwkJ/85CcUi0UcxyGR6cGWnTcCIQSV2zf46D//
      e7Qd4/YHv4z2ABErHaNSwUgkWuoNNP/2PK/xt9YoFWI6DvlCgVlfIQ4cI3XgecKV973//vsA
      HDhwACkl6eMvYYw+t3kDdhEhBCZgeTVMFWKurw0Q8eyhtUYef5mBl7/aoirdDCSrF3KU707j
      lQosTN1g6ODzmErhNYtpmxZ2Ko3nVvj7937D+7dmWTZtRr75Fn0vvcby3WmKd2/hmN1XX8LU
      au/owUc8Gs21/GZhy0opkhOHSY+OUbk7jdM3gJlItvSH4tR1rGSK0dde5/blc8zMzGA9d5hk
      phdoGMrE9/8VfqlAfHgMhGiR0o8NDnOvVsdJJR74/k5jgqZUKqER9I6M4lfKGDTc4HZUB3jP
      orUmly8Qj8eIx2IbG4Ed4/gf/DHxdIbywhzLhTy3zn/CwKvfQK4EjVmJJJn9hxCGQe/JV1pC
      jJv/WskUVrK90OLCuU9wDh6lsjTXCKvQCqNLBJdlI1teYKV7ePnP/w0nvvcX1D2PQqFILQzR
      sURXx31HtEcIQW9vD9ZDhG97Dx0hns40ZFKGR7Edh3/y5Vdxr15EhyFoTXxwGHepIZ7WFEh7
      WPWZ5jUpJRPfeotDf/Qn2M+fYOwv/prE69+lYidQqvN+A+OFl1/58dziAjGhufrh+yjALeTp
      Hxvn1J/+JUffeAuzt5/q8jL1Yr6rs4AiWmnWettspK0Ui2jTItU/wJ2LfGXmRQAAEWFJREFU
      50n1D9AzPErvwADFG1exKgVmLp4nc/AIhtO+SEqzTOv6An3rq9RknjuINC3iA4M4w+PkZu9i
      ZofxPI/QsNBefddl2s2g7qK1puZ52IZBdWmBkRe/xMEvf410dhCAfS+cQoUhn1w423CiJBLE
      NptWI/YEWmsCrclOHGT6/BkOffmryJWoz1gyxZFTr5C/d4flxd8wtsHyBlidEdbe92H7ylh/
      lsM/+MuGoaBBQ+XebQrv/wNmtfRA6MWTWi4ZL5869eOF2VkMw0AKgaouU5m5w+ylcxTmZugZ
      ew7LiVGcneHehbOEYbhakjORuL+p0VqvynRspM0e0V0opTj2nX9BGPj0jo4RT2dWr4W+z8VP
      TlPQkuzJL204+jdZn6T/sA4rmzPTmhnDzvQSP3iUSj6HV6thhMETV6VYHcKFEPi+TxiG5PJ5
      DBVSmrzM5z/9XyvVSu5bohCCIAjI5XLU63WCIKBabUh2NJWIm+fHEd2LYRjMfXGRwUPPk84O
      tYzis9evIscmSI7u23Bz+ySwkinGvvN9hr77J/i7sEeQSimUUuQKBUzTxLIssgMDq28o3LvL
      5McfrE6Nazc3YRhi2zamaZJMJltiwldl+yK6msrNq1x79x9aXtNaMbuwiJ3KbPCpR2M7QXJO
      Tx/KfPKnkFLTmAoT8TimaSKlXF3CaK3RQjD963e49emHqycA2WyWbDZLPB5naWlp0y/YqJRn
      RHcghGD+3GmWpqfWrN0lA9ksodcZLSCtNb5bRYRbF/vdLtJYkcCItxEPklKSkGALTbg4x8DA
      ACMjI6tF85LJJIZhsLS0RBi2rzLStP7mTBPRfUhg6rfvtbw2NDZO+eJnFK9dpHynoTinw5Di
      9SsUvriwaiwb1Sdbr8HazsO8IVqT//R97F0YMyVAGCp8P2hR/9Jat3RqIQQK8Ne0WwhBX18f
      AwMDD53mmsumbowZj4Dl2zcpLcyhtcYwDOKZHl554/c5cex3KE9eZvHcabg9yUsvvkjGbi0/
      utFvqrXGNM0WVWvHcVoq1rT7zMKH76JvXtmVVYMEcGsueS0ppbPkx49QjmcoKYFap6db7R3C
      HTnQ9oG3evITLYW6E0NKJn/5NtD4LROJBLF4nJ7BId74wZ8xPtDP0S+9imk79A4MsHz7JmHN
      feA+60f/MAwJgoAwDFFKEYYhfrNQXZvPlqcm8S99htylfmICqL4hYt/8Z0jHQUgDrRTB9cuo
      zz+AFeU0rTUqkYH9RwhnbmJ2WWBTFM/0eDRChW8yc+UCY8dPrs7WzX/XLl+H9h8kXSqSm5tl
      /s4UVnYYp7e/7X3XLn3X3qPdb1W8eZXCOz8j1kbI9kkhgyAgfOE1ZCwOYo1H79p5wvWbkGQa
      s3+IcqqXoAvc2BE7i5SS/PTU6kitlCIIAlQYIkXr8jWe6WH8yDFOvvQS8eLi/fKjj4GfXyJu
      bu653mmke+QUsjf74IX+QUzZRgvGNLG//QMqPYM70oAgCHbkgaPRf2dYvPAZk7/5JeGayqGB
      72GuFNBY7+yyYnHi8QRBvdby+naQtrPre0RpDo9jJFoLrAkpMV57k/Krv0fZTuDWagRKIYbG
      gIY0jB4aR+1AYx+lNM9Wy7lGbB9DCOY+/g3v/4d/x9RnHzVGf8OkXq08sL5v/j87sR9z9hbF
      C5+2vedGp0XrUWuMaLcwTvzhv/zxvdLyAxeEEJg9fXDgGIEdw0v2YB46fv9cP9OH/uI81i6o
      Kyul8H2/pbBDxJNDCIFUIcWb1yguLuAHAYnePhI9fW1Hd9N2yO6bwEKRL5VW8wnadfrNokdL
      l84gy4Udf57NkM0v38hKhWFiHH0R89TXWxtvWdQTqV2ZsqSUkVe5A0gpKV+/wtTkJAsb1JIW
      QhD4Hl61QiY7hLdcbrm2no36S1Ct4N++uTMNfwRkM8anSbsprh1CGhhvfp/CyAG8oL0TLGLv
      I4SAMKCmQK+L+hRCcPfy58xcuURxfpZzv/i/ZPYffqSguCbuwiym3v1+ZNKmf6/v9BtNZcKy
      sV79XVwnjnXr8iNtfppRpfGVIgYR3Yv2aggnTrVUILnmuFOFIaEfMPHiywD49TpFr44Ri9//
      7BZWCKFXp/jRu9i7ePzZZGfilg+doHz9IilDbDlHwDAM7BVx1XYFzCK6CCGJj4wxPz2NunUL
      36thaKgFAWPPTax2cjsepzJ9HSOeJDG+/4GqjE2aPpvm5wpXLiCXi9AJA7DWuLWbnXetA2S9
      E6TJWseTkcoQ/O73qL7zt6TsrW+Ko7yB7kcphT08jjBMlqouMp4k8/wLuIvzJLJDzF6/TN/I
      GIZtk504SP/4BDPXrpCvLGOl0u1vqjWFG1fJffYBhlLIch67Q31BGoZBIpFYzfJqxmrE43Es
      y2pJetkMs3cA/5Vv4UX+sacKIQTCiRF6dequS2J4rFFnODsEQuAcPMa58+eZPPsZYeAjpGRg
      3wTu5MW296oXctz9P/+D4j/+lGSlSMwtd6zzA5g1t0alUtmRm9kHjlLx6rgfv0NPZmdiySM6
      i9aNjuvOz9J7+BjSur9i0FojDIPM4WOoMOTMp5/y/IH9ZAaHMQ0D5XtI634F+trSPPM//Z84
      Aiy7O460d/QQX2uNuf8IltO+LmvE3iMIA5z+QWDz0GchJUJIkr0NX0FqbILS9M1WfaGLZ3G6
      7Lxjx+ceYZoEUcjzU4OSBnaml+L8PRJDo62j/5qNbLMYxbVzZzEsk3zFJT402rJXDHyv68Ro
      N50BbNt+5CNKYZjo0f2P1aiI7sEYHMUr5kkMjWKuHG+uF8Vq/p05/hLGod+hUPNJjk3g9N3P
      E9FKocvF3X+Ah7CpAfi+/8ieXiEEolZ9rEZFdAdaa8yePmq5BeLZ4RbNn40o354iOfYcdqan
      5b0LH72HmZ/fraZvmU0N4FElKYQQoDWymHvshkV0B0a6Fx0EiDX+nea6vym61RwkvXKJ8t1b
      1HILK0oiDfxSkfrls13p8JTB3B28i5/iX/wU5VZaGt70B7Rjo4fxF2aIGd33oBHbRSNtu8Uv
      1CQMw5blUHX+HsNf+ipWKkPxxhegNcr3WPr121hd2iXM9NQlBqYaSc71q2eoZ/rR3/guMhZv
      JEa41UayzENoGIRGXzm76/J2EU8O5VaRTpx4PL6au9GUxJFSEgTBqic/X69j2A6G7WAlkuQn
      L+NOXsaYv9uVoz+sE8aK2RYZt4T67NegNf7npwnm7z7woQ1H/y8+J5O717UPG/HoWP2DIAQ1
      18X3faSUeJ63KnwWhiGe5zVyNdYshwwnxvLUJMzc6ur+8MCplBCCxPxtyh+/iz19Fe/Ea6uv
      b4ZWCuPmpcfWC9Va4/k+UohNizlHPHlqnkf20FGKN67SLKTSVABcfzgShiHVhTmCUoHU4WOo
      eh0xM43Z5XFebXurbRr0zt5sSBtePYtuk/2/FiEE4eIssdrje5SFENiWxaKVoOoHkYxKB7FG
      JzBsB63Ulk6ARr7yOt6dG+T+7r9R/PnfYHcgvPlRaWsAQggMKXHicXqFQn/4/zbOC2g6Rqav
      7Vh2mBCCjO+SKxRx3c2NL+LJEIYh8SMncBfmiPUNPPwDgGHZWKMTDYnNPRLouGGPFUKQti1M
      08Qu5VDV9mmTAKgQSvkdbVjCNDDTPSzH0iil8LxH90lEbB/PSdDz/HHcpXlSY61F7jacCYRA
      mBZ7adG6JTONSQg/+Dne2EGM8YMECzNQc7EOn0B/+h7m4gwZQ8IOlsIUQhAfHMH42u9TnLqG
      Li7RNze1Y/eP2BxpOxgrgWyNxPjN1/JBvUb17i28K+ew99C+bUsGIIQgVa+gb3yON3keSSPX
      wb12jrRlIKyd3+h4SiOOvogRTxJaFtbd6whrb0yrTwParaDDsLH+3+hgQ2tu/O//iiNALZew
      VNCRrK7H4ZEW7UIIHEPie3VMKUnbJtVanWADYdzHwUSjJy+ggwA5eYFU1Pl3FZFIIUQjY7zd
      ckcI0fhtSnnsSpGY0Hsys29bvco0TfLJPqxKCa9ngJhb2rEGaa1ZclIwfw8RKLhzg5Rb6ki6
      3LNMbOIwlflZkkOjD1wrT9/Anb2DdOIYKmSHo+p3le0ZgGHA2AE4chJZWCJ87+92zPprSJyv
      v4VfzGP/9m3ss7/u+rPkpw2tNbnL51i8dpl933qL9XEAYc2ldua3WJZFrEsSW7bLtkxXSomc
      uYUwDPzrl3asgyqtqU8cRaZ7kLeuknRs7B3cWEdsjVApwrqHXy6SGt33wPXY4Aj5kFXn2F5m
      23NXsrhI/b2fEb9xcUe8tb5SlPYfx3zxK1SvXiQxNx15gTtE4AeYQZ19r3+b5bvTD1x3Z+6Q
      dfbOWf9mbPsJTEPSX1qA5NaS5jejqgXeN/4IKzuCf+0C6c8/wHrIpvdJl898lgkCn8W5OXrc
      Cl6lTGbiUIvESX1h9qlZlnZ89+K6LrUXv4E1MIxWIcaNS8TWVSBpx5Mun/ks4/k+WkgSgyMI
      w1jVTlNBwMw//j3+jcsdbd9O0vE5bLlaxU4k0VrhX79MqlKASAS3Y2itCSwHp7ef5PAYrMQB
      AeQvn0NMT+4pR9fD6LgBZPv7yf3ib1CZXlI6jBSgO4zn+ziZHsa/9iZhvYZco/CRHN/P7McC
      R6vHjvrtFrriKdLxOL2EWNGJT8exLYv63D2qi3Msz9wlNTK+ei3Wn2XiX/+IWrj3T3+adIUB
      2FtY80fsDnXPYymXwysWQCtYI5eplWLht+/g7EJNiN2i40+y1Y6/1SojEY+HUgorkUJaNnZP
      H3D/xG3p3GnU1c+fqpTXp+dJInYEwzBAKerFfEsYdOBWca9feWrW/k06+jRKKSrVrWkIRcee
      u4MUEkIfr1Qgd/n86utzv/hb7OXdLV+0G3TUAIQQJOIPV5yI2D1M08CQktD3qS7O3b9gbHxg
      qJTCdV3K5fKG7+lWOnoMunZEjzy73YFYESMo37mFlUgwf/Y0WincWg1zg2LkYRhiGMaerPfQ
      NS1W6uk5W97rDAwMMF8o4i+XyV+5gDAMnGSKsLTUNgRiL/tuuqbHNWX2IjpPzHEQvk9lfgYz
      mSJ0K1j9WVSmr9NN23G6xgAiugcpJcNDg5haM/vZh1RzSwQ1l6Fvfw/PjrUtmbWT1Gq1XTvy
      jgwgoi2O47BvbJSE4xDUXBYunGH2kw8QIxMsez7l5QdVQnbyu8MnkGbbjq7ZA0R0F83N8NjI
      MG6tRrFUZuH0rxjs7ycTiwHOE//u3SAygIhNaR5VJ1bEcZ+2g4rIACK2zF485nwYT5c5R0Q8
      IpEBRDzTRAYQ8UwTGUDEM01kABHPNJEBRHSEbkluigwg4onwsA7eLXFfkQFEPBG6pYM/jMgA
      Ih6bZr627/udbsojExlAxGPTXO7sxbyAp8+3HbHrNOODgiCgXq/j+z49PT17YhkUGUDEtmmO
      /EopCoUCYRiSzWZJJBJ7ovNDZAAR2yQMw9U1/+LiIoZhkMlkqFarpFKpDrdu60QGELEtlFLU
      ajUqlQqJRIL+/v5ON2lbRJvgiG2hlGJxcXG183eLY+tRaWsAe/VhInYHpRS5XI56vU6hUCAI
      gj2z5l+PCVAoFFYTkavVaqMucCpFOp3GcZynLgso4vFYWloin88DUK1WmZ+fZ2xsrMOt2h4m
      wMLCAp7ntVxwXZeFhQVM0ySTyWCaJqlUilisoRe/Vy0+YntorfE8jzAMyefzLauESqWC3kA0
      q9sxZ2ZmHuj8awmCgFwuB8D8/DxSShzHIZvNkslkdqudER2mVCpRr9dbTn+gMRCOjo7uyc4P
      IDfr/O1o6kDOzc3huu62vziSO99bSClJp9OUSq1F0WOxGMlkskOteny2vbj3PI87d+6wvLzc
      0pm32rEjtee9RTqdJhaLrS6B17KXf0fz5MmTj3UDKSXxeBwpJclkkkqlQr1eJ5vN7snYkIjN
      2bdvX8vML6Vk3759e9YI/j9owSczXvGXfAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
